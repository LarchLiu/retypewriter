// Vitest Snapshot v1

exports[`animator > animator 1`] = `
[
  {
    "index": 0,
    "patch": {
      "from": 75,
      "length": 29,
      "type": "removal",
    },
    "type": "new-patch",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '../src

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 74,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '../sr

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 73,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '../s

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 72,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '../

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 71,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '..

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 70,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '.

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 69,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from '

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 68,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from 

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 67,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } from

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 66,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } fro

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 65,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } fr

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 64,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } f

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 63,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one } 

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 62,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one }

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 61,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one 

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 60,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { one

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 59,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { on

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 58,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { o

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 57,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import { 

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 56,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import {

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 55,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import 

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 54,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
import

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 53,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
impor

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 52,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
impo

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 51,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
imp

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 50,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
im

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 49,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'
i

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 48,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'


describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 47,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exported', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 46,
    "type": "removal",
  },
  {
    "index": 1,
    "patch": {
      "from": 89,
      "length": 8,
      "type": "removal",
    },
    "type": "new-patch",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exporte', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 88,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('export', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 87,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('expor', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 86,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('expo', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 85,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('exp', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 84,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('ex', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 83,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('e', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 82,
    "type": "removal",
  },
  {
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 81,
    "type": "removal",
  },
  {
    "index": 2,
    "patch": {
      "from": 81,
      "text": "one",
      "type": "insert",
    },
    "type": "new-patch",
  },
  {
    "char": "o",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('o', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 82,
    "type": "insert",
  },
  {
    "char": "n",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('on', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 83,
    "type": "insert",
  },
  {
    "char": "e",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
  })
})
",
    "cursor": 84,
    "type": "insert",
  },
  {
    "index": 3,
    "patch": {
      "from": 122,
      "text": "    expect(two).toEqual(2)
",
      "type": "insert",
    },
    "type": "new-patch",
  },
  {
    "char": " ",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
   })
})
",
    "cursor": 123,
    "type": "insert",
  },
  {
    "char": " ",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    })
})
",
    "cursor": 124,
    "type": "insert",
  },
  {
    "char": " ",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
     })
})
",
    "cursor": 125,
    "type": "insert",
  },
  {
    "char": " ",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
      })
})
",
    "cursor": 126,
    "type": "insert",
  },
  {
    "char": "e",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    e  })
})
",
    "cursor": 127,
    "type": "insert",
  },
  {
    "char": "x",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    ex  })
})
",
    "cursor": 128,
    "type": "insert",
  },
  {
    "char": "p",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    exp  })
})
",
    "cursor": 129,
    "type": "insert",
  },
  {
    "char": "e",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expe  })
})
",
    "cursor": 130,
    "type": "insert",
  },
  {
    "char": "c",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expec  })
})
",
    "cursor": 131,
    "type": "insert",
  },
  {
    "char": "t",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect  })
})
",
    "cursor": 132,
    "type": "insert",
  },
  {
    "char": "(",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(  })
})
",
    "cursor": 133,
    "type": "insert",
  },
  {
    "char": "t",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(t  })
})
",
    "cursor": 134,
    "type": "insert",
  },
  {
    "char": "w",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(tw  })
})
",
    "cursor": 135,
    "type": "insert",
  },
  {
    "char": "o",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two  })
})
",
    "cursor": 136,
    "type": "insert",
  },
  {
    "char": ")",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two)  })
})
",
    "cursor": 137,
    "type": "insert",
  },
  {
    "char": ".",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).  })
})
",
    "cursor": 138,
    "type": "insert",
  },
  {
    "char": "t",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).t  })
})
",
    "cursor": 139,
    "type": "insert",
  },
  {
    "char": "o",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).to  })
})
",
    "cursor": 140,
    "type": "insert",
  },
  {
    "char": "E",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toE  })
})
",
    "cursor": 141,
    "type": "insert",
  },
  {
    "char": "q",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEq  })
})
",
    "cursor": 142,
    "type": "insert",
  },
  {
    "char": "u",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqu  })
})
",
    "cursor": 143,
    "type": "insert",
  },
  {
    "char": "a",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqua  })
})
",
    "cursor": 144,
    "type": "insert",
  },
  {
    "char": "l",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual  })
})
",
    "cursor": 145,
    "type": "insert",
  },
  {
    "char": "(",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(  })
})
",
    "cursor": 146,
    "type": "insert",
  },
  {
    "char": "2",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2  })
})
",
    "cursor": 147,
    "type": "insert",
  },
  {
    "char": ")",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)  })
})
",
    "cursor": 148,
    "type": "insert",
  },
  {
    "char": "
",
    "content": "
import { describe, expect, it } from 'vitest'

describe('should', () => {
  it('one', () => {
    expect(one).toEqual(1)
    expect(two).toEqual(2)
  })
})
",
    "cursor": 149,
    "type": "insert",
  },
]
`;
